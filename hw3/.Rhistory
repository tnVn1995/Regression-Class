library(foreign)
library(tidyverse)
install.packages("magrittr") # package installations are only needed the first time you use it
install.packages("dplyr")    # alternative installation of the %>%
library(magrittr) # needs to be run every time you start R and want to use %>%
library(dplyr)
file_path = 'C:/Users/tnguy/OneDrive - Texas Tech University/Summer_Project/2012 NHIS Adult Sample_CAM_HIT paper 2017-2-17.sav'
###Load in dataset
data = read.spss(file_path, to.data.frame=TRUE)
install.packages("magrittr")
library(foreign)
library(tidyverse)
install.packages("magrittr") # package installations are only needed the first time you use it
install.packages("dplyr")    # alternative installation of the %>%
library(magrittr) # needs to be run every time you start R and want to use %>%
library(dplyr)
file_path = 'C:/Users/ngu09790/OneDrive - Texas Tech University/Summer_Project/2012 NHIS Adult Sample_CAM_HIT paper 2017-2-17.sav'
###Load in dataset
data = read.spss(file_path, to.data.frame=TRUE)
install.packages("magrittr")
data = read.spss(file_path, to.data.frame=TRUE)
library(foreign)
library(tidyverse)
library(magrittr) # needs to be run every time you start R and want to use %>%
library(dplyr)
file_path = 'C:/Users/ngu09790/OneDrive - Texas Tech University/Summer_Project/2012 NHIS Adult Sample_CAM_HIT paper 2017-2-17.sav'
###Load in dataset
data = read.spss(file_path, to.data.frame=TRUE)
ALT_Tp = data %>% select('TP1_REC1', 'TP1_REC2', 'TP1_REC3', 'TP1_REC4','TP2_REC1', 'TP2_REC2', 'TP2_REC3', 'TP2_REC4',
'TP3_REC1', 'TP3_REC2', 'TP3_REC3', 'TP3_REC4','ALT_TP31', 'ALT_TP32', 'ALT_TP33')
ATL_dropna = na.omit(ALT_Tp)
colnames(ATL_dropna)
unique(ATL_dropna[,ALT_TP32])
unique(ATL_dropna[,14])
View(ATL_dropna)
ATL_dropna[1:3,13]
ATL_dropna[1,[c(1:3,13)]
ATL_dropna[1,c(1:3,13)]
first_response = ATL_dropna[1,c(1:3,13)]
first_response = ATL_dropna[1,c(1:4,13)]
View(first_response)
colnames(first_response) = c('Medical Doctor','Family Member','Friend','Coworker')
first_response
colnames(first_response) = c('Medical Doctor','Family Member','Friend','Coworker', 'Top therapy')
first_response
first_response
second_response = ATL_dropna[1,c(1:3,14)]
second_response
colnames(second_response) = c('Medical Doctor','Family Member','Friend','Coworker', 'Second top therapy')
second_response = ATL_dropna[1,c(1:4,14)]
colnames(second_response) = c('Medical Doctor','Family Member','Friend','Coworker', 'Second top therapy')
second_response
third_response = ATL_dropna[1,c(1:4,15)]
colnames(third_response) = c('Medical Doctor','Family Member','Friend','Coworker', 'Third top therapy')
third_response
getcwd()
getwd()
# Turn corresponding values o Y for W answer of 0's into nan
library(data.table)
therap = 2
rec = 2
data.nonan = copy(data.star)
data = simulated_data
View(first_response)
setwd("C:/Users/ngu09790/Downloads/Regression class")
knitr::opts_chunk$set(echo=FALSE, comment=NA)
print('-------------')
print(colnames(data2.1))
data2.1 = read.csv('./internet.csv', header=TRUE)
data2.1 = read.csv('./data/internet.csv', header=TRUE)
print(head(data2.1))
print('-------------')
print(colnames(data2.1))
print(nrow(data2.1))
# Gdp = data2.1$Gdp
# Int = data2.1$Int
Internet.lm=lm(Int~Gdp, data=data2.1)
summary(Internet.lm)
anova(Internet.lm)
data2.5 = read.csv('./data/cars2.csv', header=TRUE)
head(data2.5)
data2.5$Cgphm = 100 / data2.5$Cmpg
print(head(data2.5))
mean(data2.5$Cgphm)
Eng.lm = lm(Cgphm~Eng, data=data2.5)
summary(Eng.lm)
Vol.lm = lm(Cgphm~Vol, data=data2.5)
summary(Vol.lm)
anova(Eng.lm)
MSE = anova(Eng.lm)
print(MSE$Mean Sq)
MSE = anova(Eng.lm)
colnames(MSE)
MSE = anova(Eng.lm)
MSE$Mean Sq
MSE = anova(Eng.lm)
MSE$`Mean Sq`
MSE = anova(Eng.lm)
MSE$`Mean Sq`
MSE = anova(Eng.lm)
MSE = anova(Eng.lm)
print(MSE)
MSE = anova(Eng.lm)
print(MSE)
s = sqrt(MSE$`Mean Sq`)
cat('The regression standard deviation s is:', s)
MSE = anova(Eng.lm)
print(MSE)
s = sqrt(MSE$`Mean Sq`)
cat('\n\n\n')
cat('The regression standard deviation s is:', s)
describe(data2.5$Cgphm)
summary(data2.5$Cgphm)
conf.int = predict(data2.5, interval="confidence")
conf.int = predict(Eng.lm, interval="confidence")
conf.int
help(predict)
confint(Eng.lm)
help(confint)
confint(Eng.lm)[2,]
confint(Eng.lm)[1,]
confint(Eng.lm)[2,]
confint(Eng.lm)
predict(Eng.lm, newdata = data.frame(Eng=3), interval = 'confidence')
predict(Eng.lm, newdata = data.frame(Eng=3), interval = 'prediction')
install.packages("alr3", dependencies=TRUE)
knitr::opts_chunk$set(echo=FALSE, comment=NA)
library(alr3)
forbes
forbes$mu1 = 1 / (forbes$Temp* (5/9) + 255.37)
head(forbes)
plot(mu1, Lpres, data=forbes)
plot(forbes$mu1, forbes$Lpres)
plot(forbes$mu1, forbes$Lpres)
print(forbes[12,'mu1'])
print(forbes[17,'mu1'])
plot(forbes$mu1, forbes$Lpres)
print(forbes[12,c('Lpres','mu1')])
print(forbes[17,c('Lpres','mu1')])
plot(forbes$mu1, forbes$Lpres)
text(forbes$mu1, forbes$Lpres,  row.names(d),
cex=0.65, pos=3,col="red")
plot(forbes$mu1, forbes$Lpres)
text(forbes$mu1, forbes$Lpres,  row.names(forbes),
cex=0.65, pos=3,col="red")
print(forbes[12,c('Lpres','mu1')])
print(forbes[17,c('Lpres','mu1')])
plot(forbes$mu1, forbes$Lpres)
text(forbes$mu1, forbes$Lpres,  row.names(forbes),
cex=0.65, pos=3,col="red")
f.lm = lm(Lpres~mu1, data = forbes)
f.lm = lm(Lpres~mu1, data = forbes)
summary(f.lm)
temp.lm = lm(Lpres~Temp, data = forbes)
summary(temp.lm)
temp.lm = lm(Lpres~Temp, data = forbes)
hooker
hooker = lm(Pressure~Temp, data = hooker)
summary(hooker)
hooker.lm = lm(Pressure~Temp, data = hooker)
hookerlm = lm(Pressure~Temp, data = hooker)
hookerlm = lm(Pressure~Temp, data = hooker)
hookerlm = lm(Pressure~Temp, data = hooker)
hooker
knitr::opts_chunk$set(echo=FALSE, comment=NA)
library(alr3)
hookerlm = lm(Pressure~Temp, data = hooker)
hooker
